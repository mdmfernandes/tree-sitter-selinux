module.exports = grammar({
  name: "selinux",

  extras: ($) => [
    /\s|\\r?\\n/, // whitespace
    $.comment,
  ],

  // word: ($) => $.identifier,

  // externals: ($) => [
  //     // Mark comments as external tokens so that the external scanner is always
  //     // invoked, even if no external token is expected. This allows for better
  //     // error recovery, because the external scanner can maintain the overall
  //     // structure by returning dedent tokens whenever a dedent occurs, even
  //     // if no dedent is expected.
  //     $.comment,
  //
  //     // Allow the external scanner to check for the validity of closing brackets
  //     // so that it can avoid returning dedent tokens between brackets.
  //     "]",
  //     ")",
  //     "}",
  // ],
  rules: {
    source_file: ($) => repeat($._definition),

    _definition: ($) =>
      choice(
        $.type_declaration,
        $.role_declaration,
        $.rule_declaration,
        $.boolean_declaration,
        $.macro_usage,
      ),

    comment: ($) => token(seq("#", /.*/)),

    type_declaration: ($) => seq("type", field("name", $.identifier), ";"),

    role_declaration: ($) =>
      seq(
        "role",
        field("name", $.identifier),
        "types",
        field("type", $.identifier),
        ";",
      ),

    class: ($) =>
      choice(
        seq("{", repeat1(field("class", $.classes)), "}"),
        field("class", $.classes),
      ),

    type: ($) =>
      choice(
        seq(
          optional("~"),
          "{",
          seq(
            field("type", $.identifier),
            repeat1(seq(optional("-"), field("type", $.identifier))),
          ),
          "}",
        ),
        seq(optional("~"), field("type", $.identifier)),
      ),

    permission: ($) =>
      choice(
        seq(
          optional("~"),
          "{",
          seq(
            field("perm_set", $.permissions),
            repeat1(field("perm_set", $.permissions)),
          ),
          "}",
        ),
        seq(optional("~"), field("perm_set", $.permissions)),
      ),

    // https://selinuxproject.org/page/AVCRules
    rule_declaration: ($) =>
      seq(
        field("rule_name", $.rule_name),
        field("source_type", $.type),
        field("target_type", $.type),
        ":",
        field("class", $.class),
        field("perm_set", $.permission),
        ";",
      ),

    boolean_declaration: ($) =>
      seq(
        "bool",
        field("name", $.identifier),
        field("value", choice("true", "false")),
        ";",
      ),

    argument: ($) =>
      choice(
        seq(
          "{",
          seq(
            field("arg", $.identifier),
            repeat1(seq(optional("-"), field("arg", $.identifier))),
          ),
          "}",
        ),
        field("arg", $.identifier),
      ),

    arguments: ($) =>
      seq(
        field("argument", $.argument),
        repeat(seq(",", field("argument", $.argument))),
      ),

    macro_usage: ($) =>
      seq(
        field("name", $.identifier),
        "(",
        field("arguments", optional($.arguments)),
        ")",
      ),

    identifier: ($) => /[a-zA-Z_][a-zA-Z0-9_]*/,

    rule_name: ($) => choice("allow", "auditallow", "dontaudit", "neverallow"),

    // I guess this is a bit overkill, but allows me to know if I'm using a valid class
    // https://selinuxproject.org/page/ObjectClassesPerms
    classes: ($) =>
      choice(
        "appletalk_socket",
        "association",
        "blk_file",
        "capability",
        "capability2",
        "chr_file",
        "dccp_socket",
        "dir",
        "fd",
        "fifo_file",
        "file",
        "filesystem",
        "ipc",
        "kernel_service",
        "key",
        "key_socket",
        "lnk_file",
        "memprotect",
        "msg",
        "msgq",
        "netif",
        "netlink_socket",
        "netlink_audit_socket",
        "netlink_dnrt_socket",
        "netlink_firewall_socket",
        "netlink_ip6fw_socket",
        "netlink_kobject_uevent_socket",
        "netlink_nflog_socket",
        "netlink_route_socket",
        "netlink_selinux_socket",
        "netlink_tcpdiag_socket",
        "netlink_xfrm_socket",
        "node",
        "packet",
        "packet_socket",
        "peer",
        "process",
        "rawip_socket",
        "security",
        "sem",
        "shm",
        "sock_file",
        "socket",
        "system",
        "tcp_socket",
        "tun_socket",
        "udp_socket",
        "unix_dgram_socket",
        "unix_stream_socket",
        "db_blob",
        "db_column",
        "db_database",
        "db_procedure",
        "db_table",
        "db_tuple",
        "dbus",
        "context",
        "nscd",
        "passwd",
        "x_application_data",
        "x_client",
        "x_colormap",
        "x_cursor",
        "x_device",
        "x_drawable",
        "x_event",
        "x_extension",
        "x_font",
        "x_gc",
        "x_keyboard",
        "x_pointer",
        "x_property",
        "x_resource",
        "x_screen",
        "x_selection",
        "x_server",
        "x_synthetic_event",
      ),

    // https://github.com/SELinuxProject/selinux/blob/main/python/sepolgen/src/share/perm_map
    permissions: ($) =>
      choice(
        "*",
        "accept",
        "acceptfrom",
        "acquire_svc",
        "activegrab",
        "add_name",
        "addchild",
        "admin",
        "append",
        "assign",
        "associate",
        "audit_control",
        "audit_write",
        "bell",
        "bind",
        "check_context",
        "chfn",
        "chown",
        "chparent",
        "chprop",
        "chproplist",
        "chselection",
        "chsh",
        "chstack",
        "clientcomevent",
        "compute_av",
        "compute_create",
        "compute_member",
        "compute_relabel",
        "compute_user",
        "connect",
        "connectto",
        "copy",
        "create",
        "createglyph",
        "crontab",
        "ctrllife",
        "dac_override",
        "dac_read_search",
        "destroy",
        "draw",
        "drawevent",
        "dyntransition",
        "emutramp",
        "enforce_dest",
        "enqueue",
        "entrypoint",
        "enumerate",
        "execheap",
        "execmem",
        "execmod",
        "execstack",
        "execute",
        "execute_no_trans",
        "extensionevent",
        "fork",
        "fowner",
        "free",
        "fsetid",
        "getattr",
        "getcap",
        "getfontpath",
        "getgrp",
        "gethost",
        "gethostlist",
        "getopt",
        "getpgid",
        "getpwd",
        "getsched",
        "getsession",
        "getstat",
        "grab",
        "inputevent",
        "install",
        "ioctl",
        "ipc_info",
        "ipc_lock",
        "ipc_owner",
        "kill",
        "lease",
        "link",
        "linux_immutable",
        "list",
        "listen",
        "listprop",
        "load",
        "load_policy",
        "lock",
        "lookup",
        "map",
        "mknod",
        "mmap_zero",
        "mount",
        "mounton",
        "mousemotion",
        "move",
        "mprotect",
        "name_bind",
        "name_connect",
        "net_admin",
        "net_bind_service",
        "net_broadcast",
        "net_raw",
        "newconn",
        "nlmsg_read",
        "nlmsg_readpriv",
        "nlmsg_relay",
        "nlmsg_write",
        "noatsecure",
        "node_bind",
        "pageexec",
        "passivegrab",
        "passwd",
        "polmatch",
        "ptrace",
        "query",
        "quotaget",
        "quotamod",
        "quotaon",
        "randexec",
        "randmmap",
        "rawip_recv",
        "rawip_send",
        "read",
        "receive",
        "recv",
        "recv_msg",
        "recvfrom",
        "relabelfrom",
        "relabelinput",
        "relabelto",
        "remount",
        "remove_name",
        "rename",
        "reparent",
        "rlimitinh",
        "rmdir",
        "rootok",
        "screensaver",
        "search",
        "segmexec",
        "send",
        "send_msg",
        "sendto",
        "serverchangeevent",
        "setattr",
        "setbool",
        "setcap",
        "setcheckreqprot",
        "setcontext",
        "setcurrent",
        "setenforce",
        "setexec",
        "setfocus",
        "setfontpath",
        "setfscreate",
        "setgid",
        "sethostlist",
        "setkeycreate",
        "setopt",
        "setpcap",
        "setpgid",
        "setrlimit",
        "setsched",
        "setsecparam",
        "setuid",
        "share",
        "shmemgrp",
        "shmemhost",
        "shmempwd",
        "shutdown",
        "sigchld",
        "siginh",
        "sigkill",
        "signal",
        "signull",
        "sigstop",
        "store",
        "swapon",
        "sys_admin",
        "sys_boot",
        "sys_chroot",
        "sys_module",
        "sys_nice",
        "sys_pacct",
        "sys_ptrace",
        "sys_rawio",
        "sys_resource",
        "sys_time",
        "sys_tty_config",
        "syslog_console",
        "syslog_mod",
        "syslog_read",
        "tcp_recv",
        "tcp_send",
        "transition",
        "transparent",
        "udp_recv",
        "udp_send",
        "ungrab",
        "uninstall",
        "unix_read",
        "unix_write",
        "unlink",
        "unmap",
        "unmount",
        "use",
        "view",
        "warppointer",
        "windowchangeevent",
        "windowchangerequest",
        "write",
      ),
  },
});
