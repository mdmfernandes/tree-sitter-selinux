
type my_type_t;
type my_other_type_t;
attribute my_attr;
typeattribute my_type_t my_attr;

role my_role_r types my_type_t;

bool my_boolean false;

# Macro definition
interface(`my_prefix_do_something',`
    allow $1 $2:file { getattr read };
')

# Conditional statement
ifdef(`my_boolean', `
    allow my_type_t my_other_type_t:file append;
')

# Complex construct with optional block
optional_policy(`
    role_transition my_type_t my_other_type_t:process my_new_role_r;
')

optional_policy(`
	allow basic_t foo_t:file *;
	allow basic_t foo_t:dir read;
')

optional_policy(`
	allow basic_t bar_t:file ~{ read write };
')
